version: 2.1
commands:
  notify:
    description: Generate an xMatters event
    parameters:
      author:
        default: "${CIRCLE_USERNAME}"
        description: The GitHub or Bitbucket username of the user who triggered the build.
        type: string
      project:
        default: "${CIRCLE_PROJECT_REPONAME}"
        description: Project the build is from
        type: string
      workflow:
        default: ""
        description: The name of the workflow
        type: string
      branch:
        default: "${CIRCLE_BRANCH}"
        description: The branch the commit is on
        type: string
      commit:
        default: "${CIRCLE_SHA1}"
        description: The commit hash
        type: string
      build:
        default: "${CIRCLE_BUILD_NUM}"
        description: The number of the CircleCI Build number
        type: string
      build_url:
        default: "${CIRCLE_BUILD_URL}"
        description: The URL for the current build.
        type: string
      job:
        default: "${CIRCLE_JOB}"
        description: The job name
        type: string
      job_status:
        default: ""
        description: The job status
        type: string
      xm_url:
        default: ${XM_URL}
        description: The inbound integration url. This can be stored in the CircleCI UI as the 'XM_URL' env var
        type: string
    steps:
    - run:
        command: |
          if [ -z "$BASH" ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          # Provide error if no url is set and error. Otherwise continue
          if [ -z "<< parameters.xm_url >>" ]; then
            echo "NO XM_URL SET"
            echo "Please input your XM_URL value either in the settings for this project, or as a parameter for this orb."
            exit 1

          # Webhook properly set.
          echo Generating event to xMatters
          curl -X POST -H 'Content-type: application/json' \
            --data \
            '{
              "properties": {
                "author":     "<< parameters.author >>",
                "project":    "<< parameters.project >>",
                "workflow":   "<< parameters.workflow >>",
                "branch":     "<< parameters.branch >>",
                "commit":     "<< parameters.commit >>",
                "build":      "<< parameters.build >>",
                "build_url":  "<< parameters.build_url >>",
                "job":        "<< parameters.job >>",
                "job_status": "<< parameters.job_status >>"
              } 
            }' "<< parameters.xm_url >>" 
        name: xMatters Inbound Command
        shell: /bin/bash
description: |
  Some nice helpful description sauce here.
examples:
  notify:
    description: 'Notify some people via xMatters'
    usage:
      jobs:
        build:
          docker:
             - image: <docker image>
          steps:
             - xmatters/notify:
                xm_url:     ${XM_URL}
                author:     ""
                project:    ""
                workflow:   ""
                branch:     ""
                commit:     ""
                build:      ""
                build_url:  ""
                job:        ""
                job_status: ""
      orbs:
        xmatters: circleci/xmatters@1.0.0
      version: 2.1
      workflows:
        your-workflow:
          jobs:
          - build
executors:
  alpine:
    docker:
    - environment:
        TERM: dumb
      image: cibuilds/base:latest
    resource_class: small
