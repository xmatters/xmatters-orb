version: 2.1
commands:
  notify:
    description: Generate an xMatters event based on the build status of a job
    parameters:
      author:
        default: "${CIRCLE_USERNAME}"
        description: The GitHub or Bitbucket username of the user who triggered the build.
        type: string
      project:
        default: "${CIRCLE_PROJECT_REPONAME}"
        description: Project the build is from
        type: string
      workflow_id:
        default: "${CIRCLE_WORKFLOW_ID}"
        description: A unique identifier for the workflow instance of the current job.
        type: string
      branch:
        default: "${CIRCLE_BRANCH}"
        description: The branch the commit is on
        type: string
      commit:
        default: "${CIRCLE_SHA1}"
        description: The commit hash
        type: string
      build:
        default: "${CIRCLE_BUILD_NUM}"
        description: The number of the CircleCI Build number
        type: string
      build_url:
        default: "${CIRCLE_BUILD_URL}"
        description: The URL for the current build.
        type: string
      job:
        default: "${CIRCLE_JOB}"
        description: The job name
        type: string
      xm_url:
        default: "${XM_URL}"
        description: The inbound integration url. This can be stored in the CircleCI UI as the 'XM_URL' env var
        type: string
    steps:
    - run:
        command: |
          if [ -z "$BASH" ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          echo 'export XM_BUILD_STATUS="fail"' >> $BASH_ENV
        name: xMatters - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export XM_BUILD_STATUS="success"' >> $BASH_ENV
        name: xMatters - Setting Success Condition
        when: on_success
    - run:
        command: |
          # Provide error if no url is set and error. Otherwise continue
          if [ -z "<< parameters.xm_url >>" ]; then
            echo "NO XM_URL SET"
            echo "Please input your XM_URL value either in the settings for this project, or as a parameter for this orb."
            exit 1
          fi

          # Webhook properly set.
          echo Generating event to xMatters
          curl -X POST -H 'Content-type: application/json' \
            --data \
            "{\
              \"properties\": {\
                \"author\":        \"<< parameters.author >>\",\
                \"project\":       \"<< parameters.project >>\",\
                \"workflow_id\":   \"<< parameters.workflow_id >>\",\
                \"branch\":        \"<< parameters.branch >>\",\
                \"commit\":        \"<< parameters.commit >>\",\
                \"build\":         \"<< parameters.build >>\",\
                \"build_url\":     \"<< parameters.build_url >>\",\
                \"job\":           \"<< parameters.job >>\",\
                \"job_status\":    \"$XM_BUILD_STATUS\" \
              } \
            }" "<< parameters.xm_url >>"
        name: xMatters Inbound Command
        shell: /bin/bash
  notify_raw:
    description: Generate an xMatters event with the given JSON payload. See here for details https://help.xmatters.com/xmapi/index.html#trigger-an-event
    parameters:
      json_payload:
        default: ""
        description: The json object to send to xMatters.
        type: string
      xm_url:
        default: ${XM_URL}
        description: Enter either your inbound integration url or use the CircleCI UI to add
          your token under the 'XM_URL' env var
        type: string
    steps:
    - run:
        command: |
          if [ -z "$BASH" ]; then
            echo Bash not installed.
            exit 1
          fi
        name: Provide error if non-bash shell
    - run:
        command: |
          echo 'export XM_BUILD_STATUS="fail"' >> $BASH_ENV
        name: xMatters - Setting Failure Condition
        when: on_fail
    - run:
        command: |
          echo 'export XM_BUILD_STATUS="success"' >> $BASH_ENV
        name: xMatters - Setting Success Condition
        when: on_success
    - run:
        command: |
          # Provide error if no url is set and error. Otherwise continue
          if [ -z "<< parameters.xm_url >>" ]; then
            echo "NO XM_URL SET"
            echo "Please input your XM_URL value either in the settings for this project, or as a parameter for this orb."
            exit 1
          fi
          if [-z "<< parameters.json_payload >>" ]; then
            echo "NO json_payload passed"
            echo "Enter some json to pass into xMatters. CHECKOUTTHEDOCSHERE"
            exit 1
          fi
          
          # Webhook properly set.
          echo "Generating event to xMatters with payload '" << parameters.json_payload >> "'"
          curl -X POST --header 'Content-type: application/json' \
            --data '<< parameters.json_payload >>' \
            "<< parameters.xm_url >>"          
        name: xMatters Inbound Command
        shell: /bin/bash
description: |
  Generate an xMatters event based on a job build. For more details see here: https://github.com/xmatters/xm-labs-circleci-orb
examples:
  notify:
    description: 'Notify some people via xMatters'
    usage:
      jobs:
        build:
          docker:
             - image: <docker image>
          steps:
             - xmatters/notify:
                author: "Deon Sanders"
      orbs:
        xmatters: circleci/xmatters@1.0.0
      version: 2.1
      workflows:
        your-workflow:
          jobs:
          - build
  notify_raw:
    description: 'Notify some people via xMatters using a custom payload'
    usage:
      jobs:
        build:
          docker:
             - image: <docker image>
          steps:
             - xmatters/notify_raw:
                xm_url: ${XM_URL}
                json_payload: "{ \"properties\": { \
                    \"job\": \"job name here\", \
                    \"author\": \"Deon Sanders\", \
                    \"something\": \"value\" 
                  }, \
                  \"recipients\": [{ \"id\": \"dsanders\" }] \
                }"
      orbs:
        xmatters: circleci/xmatters@1.0.0
      version: 2.1
      workflows:
        your-workflow:
          jobs:
          - build
executors:
  alpine:
    docker:
    - environment:
        TERM: dumb
      image: cibuilds/base:latest
    resource_class: small
